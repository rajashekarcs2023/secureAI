"use client"

import { useState } from "react"
import {
  FileText,
  Folder,
  FolderOpen,
  Search,
  Settings,
  Play,
  AlertTriangle,
  CheckCircle,
  Shield,
  MessageSquare,
  Send,
  Eye,
  Lock,
  Database,
  Cloud,
  TrendingUp,
  AlertCircle,
} from "lucide-react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { ScrollArea } from "@/components/ui/scroll-area"
import { Badge } from "@/components/ui/badge"
import { Card } from "@/components/ui/card"

export default function SecureCodeAI() {
  const [selectedFile, setSelectedFile] = useState("main.tf")
  const [chatMessage, setChatMessage] = useState("")

  const files = [
    { name: "main.tf", type: "file", icon: FileText, active: true },
    { name: "s3-bucket.yaml", type: "file", icon: FileText },
    { name: "vpc.tf", type: "file", icon: FileText },
    { name: "security-groups.tf", type: "file", icon: FileText },
    { name: "iam-policies.json", type: "file", icon: FileText },
    {
      name: "kubernetes",
      type: "folder",
      icon: Folder,
      children: [
        { name: "deployment.yaml", type: "file", icon: FileText },
        { name: "service.yaml", type: "file", icon: FileText },
      ],
    },
    {
      name: "docker",
      type: "folder",
      icon: Folder,
      children: [
        { name: "Dockerfile", type: "file", icon: FileText },
        { name: "docker-compose.yml", type: "file", icon: FileText },
      ],
    },
  ]

  const terraformCode = `# S3 Bucket Configuration for User Uploads
# Generated by SecureCodeAI with security best practices

resource "aws_s3_bucket" "user_uploads" {
  bucket = "myapp-user-uploads-\${random_id.bucket_suffix.hex}"
  
  # ❌ VULNERABLE: Public read access detected
  # acl = "public-read"  # This allows public access!
  
  tags = {
    Name        = "User Uploads Bucket"
    Environment = "production"
    # ✅ Added encryption based on your org policy
    Security    = "encrypted"
  }
}

# ✅ Secure bucket configuration
resource "aws_s3_bucket_public_access_block" "user_uploads" {
  bucket = aws_s3_bucket.user_uploads.id

  block_public_acls       = true
  block_public_policy     = true
  ignore_public_acls      = true
  restrict_public_buckets = true
}

# ✅ Server-side encryption enabled
resource "aws_s3_bucket_server_side_encryption_configuration" "user_uploads" {
  bucket = aws_s3_bucket.user_uploads.id

  rule {
    apply_server_side_encryption_by_default {
      kms_master_key_id = aws_kms_key.s3_key.arn
      sse_algorithm     = "aws:kms"
    }
    bucket_key_enabled = true
  }
}

# ✅ Versioning enabled for data protection
resource "aws_s3_bucket_versioning" "user_uploads" {
  bucket = aws_s3_bucket.user_uploads.id
  versioning_configuration {
    status = "Enabled"
  }
}

# ✅ Lifecycle policy to manage costs
resource "aws_s3_bucket_lifecycle_configuration" "user_uploads" {
  bucket = aws_s3_bucket.user_uploads.id

  rule {
    id     = "user_uploads_lifecycle"
    status = "Enabled"

    transition {
      days          = 30
      storage_class = "STANDARD_IA"
    }

    transition {
      days          = 90
      storage_class = "GLACIER"
    }
  }
}

resource "random_id" "bucket_suffix" {
  byte_length = 4
}`

  const chatMessages = [
    {
      type: "user",
      content: "Create an S3 bucket for user uploads",
      timestamp: "2:34 PM",
    },
    {
      type: "ai",
      content:
        "I see your org has 3 S3-related vulnerabilities in production. Here's secure code that follows your security policies and prevents common misconfigurations. I've added encryption, blocked public access, enabled versioning, and included lifecycle management.",
      timestamp: "2:34 PM",
    },
  ]

  const securityAlerts = [
    { type: "critical", message: "Public S3 bucket detected in prod-env", time: "5m ago" },
    { type: "warning", message: "Unencrypted RDS instance found", time: "12m ago" },
    { type: "info", message: "IAM policy updated successfully", time: "1h ago" },
    { type: "critical", message: "Security group allows 0.0.0.0/0", time: "2h ago" },
  ]

  return (
    <div className="h-screen bg-[#1e1e1e] text-gray-100 flex flex-col">
      {/* Header */}
      <div className="h-12 bg-[#2d2d30] border-b border-[#3e3e42] flex items-center px-4">
        <div className="flex items-center space-x-2">
          <Shield className="w-5 h-5 text-blue-400" />
          <span className="font-semibold text-sm">SecureCodeAI</span>
        </div>
        <div className="flex-1 flex justify-center">
          <div className="flex items-center space-x-4 text-sm">
            <Button variant="ghost" size="sm" className="text-gray-300 hover:text-white">
              <Play className="w-4 h-4 mr-1" />
              Run Security Scan
            </Button>
            <Button variant="ghost" size="sm" className="text-gray-300 hover:text-white">
              <Settings className="w-4 h-4 mr-1" />
              Policies
            </Button>
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <Badge variant="outline" className="bg-green-900/20 text-green-400 border-green-400/30">
            <Shield className="w-3 h-3 mr-1" />
            Secure Mode
          </Badge>
        </div>
      </div>

      {/* Main Content */}
      <div className="flex-1 flex">
        {/* Left Panel - File Explorer */}
        <div className="w-64 bg-[#252526] border-r border-[#3e3e42]">
          <div className="p-3 border-b border-[#3e3e42]">
            <div className="flex items-center justify-between mb-2">
              <span className="text-xs font-semibold text-gray-400 uppercase">Explorer</span>
              <Search className="w-4 h-4 text-gray-400" />
            </div>
            <Input placeholder="Search files..." className="h-7 bg-[#3c3c3c] border-[#3e3e42] text-xs" />
          </div>
          <ScrollArea className="h-full">
            <div className="p-2">
              <div className="mb-2">
                <div className="flex items-center text-xs text-gray-400 mb-1">
                  <FolderOpen className="w-4 h-4 mr-1" />
                  infrastructure/
                </div>
                <div className="ml-4 space-y-1">
                  {files.map((file, index) => (
                    <div key={index}>
                      <div
                        className={`flex items-center px-2 py-1 rounded text-xs cursor-pointer hover:bg-[#2a2d2e] ${
                          file.active ? "bg-[#37373d] text-white" : "text-gray-300"
                        }`}
                        onClick={() => setSelectedFile(file.name)}
                      >
                        <file.icon className="w-4 h-4 mr-2 text-blue-400" />
                        {file.name}
                      </div>
                      {file.children && (
                        <div className="ml-6 mt-1 space-y-1">
                          {file.children.map((child, childIndex) => (
                            <div
                              key={childIndex}
                              className="flex items-center px-2 py-1 rounded text-xs cursor-pointer hover:bg-[#2a2d2e] text-gray-300"
                            >
                              <child.icon className="w-4 h-4 mr-2 text-blue-400" />
                              {child.name}
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </ScrollArea>
        </div>

        {/* Center Panel - Code Editor */}
        <div className="flex-1 bg-[#1e1e1e] flex flex-col">
          {/* Editor Tabs */}
          <div className="h-9 bg-[#2d2d30] border-b border-[#3e3e42] flex items-center">
            <div className="flex">
              <div className="flex items-center px-3 py-2 bg-[#1e1e1e] border-r border-[#3e3e42] text-sm">
                <FileText className="w-4 h-4 mr-2 text-blue-400" />
                main.tf
                <button className="ml-2 text-gray-400 hover:text-white">×</button>
              </div>
            </div>
          </div>

          {/* Code Editor */}
          <div className="flex-1 relative">
            <ScrollArea className="h-full">
              <div className="flex">
                {/* Line Numbers */}
                <div className="w-12 bg-[#1e1e1e] text-gray-500 text-xs font-mono pt-4 text-right pr-2 select-none">
                  {terraformCode.split("\n").map((_, index) => (
                    <div key={index} className="h-5 leading-5">
                      {index + 1}
                    </div>
                  ))}
                </div>

                {/* Code Content */}
                <div className="flex-1 p-4 font-mono text-sm leading-5">
                  <pre className="text-gray-100 whitespace-pre-wrap">
                    <code
                      dangerouslySetInnerHTML={{
                        __html: terraformCode
                          .replace(
                            /# ❌ VULNERABLE:.*$/gm,
                            '<span class="text-red-400 bg-red-900/20 px-1 rounded">$&</span>',
                          )
                          .replace(
                            /# acl = "public-read".*$/gm,
                            '<span class="text-red-400 line-through opacity-60">$&</span>',
                          )
                          .replace(/# ✅.*$/gm, '<span class="text-green-400 bg-green-900/20 px-1 rounded">$&</span>')
                          .replace(/resource|aws_s3_bucket|aws_kms_key/g, '<span class="text-purple-400">$&</span>')
                          .replace(/"[^"]*"/g, '<span class="text-green-300">$&</span>')
                          .replace(/=|{|}|\[|\]/g, '<span class="text-yellow-400">$&</span>')
                          .replace(/true|false/g, '<span class="text-blue-400">$&</span>'),
                      }}
                    />
                  </pre>

                  {/* Inline Security Warnings */}
                  <div className="absolute top-[180px] left-[200px]">
                    <div className="flex items-center bg-red-900/80 text-red-200 px-2 py-1 rounded text-xs border border-red-600/50">
                      <AlertTriangle className="w-3 h-3 mr-1" />
                      Public read access detected
                    </div>
                  </div>

                  <div className="absolute top-[240px] left-[200px]">
                    <div className="flex items-center bg-green-900/80 text-green-200 px-2 py-1 rounded text-xs border border-green-600/50">
                      <CheckCircle className="w-3 h-3 mr-1" />
                      Encryption enabled per org policy
                    </div>
                  </div>
                </div>
              </div>
            </ScrollArea>
          </div>
        </div>

        {/* Right Panel - AI Chat */}
        <div className="w-80 bg-[#252526] border-l border-[#3e3e42] flex flex-col">
          <div className="p-3 border-b border-[#3e3e42]">
            <div className="flex items-center space-x-2">
              <MessageSquare className="w-4 h-4 text-blue-400" />
              <span className="text-sm font-semibold">SecureCodeAI Assistant</span>
            </div>
          </div>

          {/* Security Context Cards */}
          <div className="p-3 border-b border-[#3e3e42] space-y-2">
            <Card className="bg-[#1e1e1e] border-[#3e3e42] p-3">
              <div className="flex items-center space-x-2 mb-2">
                <Eye className="w-4 h-4 text-orange-400" />
                <span className="text-xs font-semibold text-orange-400">Based on your Wiz data:</span>
              </div>
              <div className="text-xs text-gray-300 space-y-1">
                <div>• 12 public buckets found</div>
                <div>• Encryption required by policy</div>
                <div>• 3 S3 vulnerabilities in prod</div>
              </div>
            </Card>
          </div>

          {/* Chat Messages */}
          <ScrollArea className="flex-1 p-3">
            <div className="space-y-4">
              {chatMessages.map((message, index) => (
                <div key={index} className={`flex ${message.type === "user" ? "justify-end" : "justify-start"}`}>
                  <div
                    className={`max-w-[80%] rounded-lg p-3 text-sm ${
                      message.type === "user" ? "bg-blue-600 text-white" : "bg-[#3c3c3c] text-gray-100"
                    }`}
                  >
                    <div className="mb-1">{message.content}</div>
                    <div className="text-xs opacity-70">{message.timestamp}</div>
                  </div>
                </div>
              ))}
            </div>
          </ScrollArea>

          {/* Chat Input */}
          <div className="p-3 border-t border-[#3e3e42]">
            <div className="flex space-x-2">
              <Input
                placeholder="Ask about security..."
                value={chatMessage}
                onChange={(e) => setChatMessage(e.target.value)}
                className="flex-1 bg-[#3c3c3c] border-[#3e3e42] text-sm"
              />
              <Button size="sm" className="bg-blue-600 hover:bg-blue-700">
                <Send className="w-4 h-4" />
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* Bottom Panel - Security Insights */}
      <div className="h-48 bg-[#252526] border-t border-[#3e3e42]">
        <div className="flex h-full">
          {/* Security Metrics */}
          <div className="w-1/3 p-4 border-r border-[#3e3e42]">
            <h3 className="text-sm font-semibold mb-3 flex items-center">
              <Shield className="w-4 h-4 mr-2 text-green-400" />
              Security Overview
            </h3>
            <div className="space-y-3">
              <div className="flex items-center justify-between">
                <span className="text-xs text-gray-400">Vulnerabilities Prevented</span>
                <Badge className="bg-green-900/20 text-green-400 border-green-400/30">5</Badge>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-xs text-gray-400">Org Security Score</span>
                <div className="flex items-center space-x-2">
                  <div className="w-16 h-2 bg-[#3c3c3c] rounded-full">
                    <div className="w-[85%] h-full bg-green-500 rounded-full"></div>
                  </div>
                  <span className="text-xs text-green-400">85/100</span>
                </div>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-xs text-gray-400">Policy Compliance</span>
                <Badge className="bg-blue-900/20 text-blue-400 border-blue-400/30">92%</Badge>
              </div>
            </div>
          </div>

          {/* Recent Alerts */}
          <div className="flex-1 p-4">
            <h3 className="text-sm font-semibold mb-3 flex items-center">
              <AlertCircle className="w-4 h-4 mr-2 text-orange-400" />
              Recent Security Alerts
            </h3>
            <ScrollArea className="h-32">
              <div className="space-y-2">
                {securityAlerts.map((alert, index) => (
                  <div key={index} className="flex items-center space-x-3 p-2 rounded hover:bg-[#2a2d2e]">
                    <div
                      className={`w-2 h-2 rounded-full ${
                        alert.type === "critical"
                          ? "bg-red-500"
                          : alert.type === "warning"
                            ? "bg-orange-500"
                            : "bg-blue-500"
                      }`}
                    />
                    <div className="flex-1">
                      <div className="text-xs text-gray-100">{alert.message}</div>
                      <div className="text-xs text-gray-500">{alert.time}</div>
                    </div>
                  </div>
                ))}
              </div>
            </ScrollArea>
          </div>

          {/* Quick Actions */}
          <div className="w-1/4 p-4 border-l border-[#3e3e42]">
            <h3 className="text-sm font-semibold mb-3 flex items-center">
              <TrendingUp className="w-4 h-4 mr-2 text-blue-400" />
              Quick Actions
            </h3>
            <div className="space-y-2">
              <Button
                variant="outline"
                size="sm"
                className="w-full justify-start text-xs border-[#3e3e42] hover:bg-[#2a2d2e] bg-transparent"
              >
                <Lock className="w-3 h-3 mr-2" />
                Scan All Files
              </Button>
              <Button
                variant="outline"
                size="sm"
                className="w-full justify-start text-xs border-[#3e3e42] hover:bg-[#2a2d2e] bg-transparent"
              >
                <Database className="w-3 h-3 mr-2" />
                Update Policies
              </Button>
              <Button
                variant="outline"
                size="sm"
                className="w-full justify-start text-xs border-[#3e3e42] hover:bg-[#2a2d2e] bg-transparent"
              >
                <Cloud className="w-3 h-3 mr-2" />
                Deploy Secure
              </Button>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
